DESCRIPTION - This README is designed to demonstrate how to execute a local web app whose main objective is to take a user provided playlist as input and provide 5 ranked song recommendations as output. A link to our Web App (in developer mode) can be found here: https://streamify.azurewebsites.net. While in developer mode, to use the app you must email kdadhaniya3@gatech.edu your spotify affiliated email and wait for access to be granted. For proof of concept, you may use the following demo Spotify account credentials - username: tunetitansdemo@gmail.com password: TuneTitansDemo1! We have listed the necessary installation and execution steps plus a short demo below. 

INSTALLATION
1. To run the web app locally, first store the unzipped CODE folder on your desktop (or any other folder other than downloads). 
2. Open an IDE (VSCode, Pycharm, etc.), and open the folder in the IDE. Once opened, change the directories using the terminal within the IDE until you are on the same level as the  spotify_website_v5/manage.py file in the directory using the cd and ls commands (for Mac).
3. Now run the following terminal commands: 1) pip install virtualenv, 2) virtualenv venv, 3) venv\Scripts\activate (Windows) or source venv/bin/activate (Mac).
4. Now run the following command: pip install -r requirements.txt. This will install all the libraries required to run the application from the requirements.txt file.

EXECUTION - Below we have chronologically explained what needs to be altered/actions required to properly execute our project. Step 3 is computationally extensive; it executes data-preprocessing, training, and model fitting, thus it takes several days to run (exact execution time is computer dependent).
1. From the website https://www.aicrowd.com/challenges/spotify-million-playlist-dataset-challenge/dataset_files you may download a dataset containing zipped json files of one million Spotify playlists consisting of the playlist names along with the track URIs (unique song identifiers) of the songs in each playlist. After downloading spotify_million_playlist_dataset.zip, store the zipped folder in this directory spotify_website_v5/user_signin/data/.
2. We use the Spotify API to get song features. You will need to provide your client_credentials_manager and client_secret which can be obtained from making a Web App using the Spotify API link: https://developer.spotify.com/documentation/web-api.
3. To avoid the overhead cost of training the data, we have included the trained data in the folder already. If replication is desired, open spotify_website_v5/eda_preprocessing_training.py and provide your client_credentials_manager and client_secret from step 2 (we have provided ours for temporary use). Later in the file, we conduct parallelization in order to train data which requires conducting kmeans model fitting. Windows has a known memory leak when doing this, so it is suggested to update your system’s environment variable OMP_NUM_THREADS to 1. This also makes the parallelization run faster. We did run into a RAM issue and with a 6 core computer, at least 32 GB of RAM is required. This preprocessing/training execution time is computer specific but may take upwards of 3+ days to run in totality. Once ran, you will have the following files written to csv: million_playlist, song_features, song_cluster, playlist_cluster, cluster_2_song, playlist_rank_data, and predictions_full_data along with the following models: song_cluster_model, playlist_cluster_model, and MLR. These are all required to make recommendations and continue to build a database of candidate songs. There will also be quite a few plots that display for visualization purposes.
4. Open spotify_website_v5/spotify_website_v5/settings.py and input your spotify credentials (we have provided ours for temporary use). In the terminal (ensure virtual environment is activated), run the following command: python manage.py runserver 8008. This will run a local server on port 8008, and after some quick automatic setup by Django, a link will appear similar to this: http://127.0.0.1:8008/. Click on the link, and the application will start to run. Now you will be able to use the application by logging in with your Spotify account. Enjoy your recommendations!

DEMO VIDEO - https://youtu.be/P1htTKtlbCA